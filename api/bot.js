const { Telegraf, Markup } = require('telegraf');

const BOT_TOKEN = process.env.BOT_TOKEN;
const CHANNEL_USERNAME = 'spektrminda';
const CHANNEL_ID = -1002696885166;
const ADMIN_CHAT_ID = -1002818324656;
const COMMENTS_CHAT_ID = -1002899007927;
const MAIN_CHAT_ID = -1002894920473;
const ADMIN_IDS = [1465194766, 2032240231, 1319314897];
const ALLOWED_CHATS = [
  { id: COMMENTS_CHAT_ID, name: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞ –Ø –°–ø–µ–∫—Ç—Ä ‚ô¶Ô∏è' },
  { id: ADMIN_CHAT_ID, name: '–ß–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ üèõÔ∏è' },
  { id: MAIN_CHAT_ID, name: '–û—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç üß®' }
];

const STICKER_PACK_NAME = 'ShizaSpectre';
const COMMENT_TEXT = `<b>‚ö†Ô∏è –ö—Ä–∞—Ç–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:</b>

‚Ä¢ –°–ø–∞–º –∫–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–µ—â—ë–Ω.
‚Ä¢ –ó–∞–ø—Ä–µ—â—ë–Ω –ª—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–µ–∫—Å—É–∞–ª—å–Ω–æ–π –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç–∏. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Ç–∞–±–µ–ª—å–Ω—ã –Ω–∞ —Ä–∞–±–æ—Ç–µ.
‚Ä¢ –í–µ–¥–∏—Ç–µ —Å–µ–±—è –ø—Ä–∏–ª–∏—á–Ω–æ, –Ω–µ –æ—Å–∫–æ—Ä–±–ª—è–π—Ç–µ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ —Ç–µ–º–µ –ø–æ—Å—Ç–∞.
‚Ä¢ –õ—é–±–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –∏–ª–∏ –æ–∫–æ–ª–æ–ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞—Å–∞—é—â–∏–π—Å—è —Å–æ–±—ã—Ç–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏ –∑–∞–ø—Ä–µ—â–µ–Ω.
‚Ä¢ –ö–æ–Ω—Ç–µ–Ω—Ç, –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π –∫ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏, –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å—Å—è, –∞ —É—á–∞—Å—Ç–Ω–∏–∫ ‚Äî –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è.

üì° <a href="https://t.me/spectrmind">–ù–∞—à —á–∞—Ç</a> | <a href="https://discord.gg/rBnww7ytM3">Discord</a> | <a href="https://www.tiktok.com/@spectr_mindustry?_t=ZN-8yZCVx33mr9&_r=1">TikTok</a>`;

const bot = new Telegraf(BOT_TOKEN);

const processedMediaGroups = new Set();
const messageConnections = new Map();
const userWarnings = new Map();
const spamJobs = new Map();
const stickerSetCache = {
  name: STICKER_PACK_NAME,
  stickers: [],
  lastUpdated: 0
};

const badWordsRhymes = {
  "—Ö—É–π": "–•—É–π –Ω–∞ –º–Ω–µ–Ω–∏—è –Ω–µ –¥–µ–ª–∏—à—å.",
  "–ø–∏–∑–¥–∞": "–ü–∏–∑–¥–∞ ‚Äî –Ω–µ –±—Ä–∏–ª–ª–∏–∞–Ω—Ç, —Å–∏—è—Ç—å –Ω–µ –æ–±—è–∑–∞–Ω–∞.",
  "–µ–±–∞—Ç—å": "–ï–±–∞—Ç—å ‚Äî –Ω–µ –º–µ—à–∫–∏ –≤–æ—Ä–æ—á–∞—Ç—å.",
  "–±–ª—è–¥—å": "–ë–ª—è–¥—å ‚Äî –Ω–µ –í–∞–Ω –ì–æ–≥, –∞ –∫–∞—Ä—Ç–∏–Ω—ã —Ä–∏—Å—É–µ—Ç.",
  "–µ–±–ª–∞–Ω": "–ï–±–ª–∞–Ω ‚Äî –Ω–µ –±–∞—Ä–∞–Ω, –∞ –±–ª–µ–µ—Ç.",
  "–≥–æ–≤–Ω–æ": "–ì–æ–≤–Ω–æ ‚Äî –Ω–µ –æ–±–ª–∞–∫–æ, –ª–µ—Ç–∞—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ.",
  "–¥–æ–ª–±–æ—ë–±": "–î–æ–ª–±–æ—ë–± ‚Äî –Ω–µ —Ç—Ä–∞–∫—Ç–æ—Ä, –∞ –ø–∞—à–µ—Ç.",
  "–º—É–¥–∞–∫": "–ú—É–¥–∞–∫ ‚Äî –Ω–µ –∫–∞–∫—Ç—É—Å, –∞ –∫–æ–ª–µ—Ç—Å—è.",
  "–∂–æ–ø–∞": "–ñ–æ–ø–∞ ‚Äî –Ω–µ —Ä–æ–∑–∞, –∞ –∫—Ä–∞—Å–Ω–µ–µ—Ç.",
  "–∑–∞–µ–±–∞–ª": "–ó–∞–µ–±–∞–ª ‚Äî –Ω–µ –∫–æ—Ç—ë–ª, –∞ –ø–∞—Ä–∏—Ç.",
  "–∏–¥–∏ –Ω–∞ —Ö—É–π": "–ù–∞ —Ö—É–π –∏–¥—É—Ç, —Å —Ö—É—è –ø–∞–¥–∞—é—Ç. –û—Å—Ç–æ—Ä–æ–∂–Ω–µ–π –≤ –ø—É—Ç–∏.",
  "–ø–æ—Ö—É–π": "–ü–æ—Ö—É–π ‚Äî –Ω–µ –æ–∑–µ—Ä–æ, —Ä—ã–±—É –Ω–µ –ª–æ–≤—è—Ç.",
  "–æ—Ö—É–µ–ª": "–û—Ö—É–µ–ª ‚Äî –Ω–µ –ø–∞–º—è—Ç–Ω–∏–∫, —Ö–æ–¥–∏—Ç—å –º–æ–∂–µ—à—å.",
  "–∞—Ö—É–µ–ª": "–ê—Ö—É–µ–ª ‚Äî –Ω–µ –ø–∞–º—è—Ç–Ω–∏–∫, —Ö–æ–¥–∏—Ç—å –º–æ–∂–µ—à—å.",
  "–ø–∏–∑–¥–µ—Ü": "–ü–∏–∑–¥–µ—Ü ‚Äî –Ω–µ —Ç–µ–ª–µ–ø–æ—Ä—Ç, –Ω–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç –≤ –¥—Ä—É–≥–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.",
  "–µ–±–∞—à—å": "–ï–±–∞—à—å ‚Äî –Ω–µ –∫–æ–ø–µ–π–∫–∞, —á—Ç–æ–±—ã –µ—ë –±–µ—Ä–µ—á—å.",
  "–∑–∞–µ–±–∞–ª–æ": "–ó–∞–µ–±–∞–ª–æ ‚Äî –Ω–µ —Ç–∞–∫—Å–∏, –≤—ã–π—Ç–∏ –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.",
  "–æ—Ç—ä–µ–±–∏—Å—å": "–û—Ç—ä—ë–±–∏—Å—å ‚Äî –Ω–µ –¥–≤–µ—Ä—å, —Å–∞–º–∞ –Ω–µ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è.",
  "–≤—ã—ë–±—ã–≤–∞–µ—à—å—Å—è": "–í—ã—ë–±—ã–≤–∞–µ—à—å—Å—è ‚Äî –Ω–µ –Ω–∞ –≤—ã—Å—Ç–∞–≤–∫–µ, –ø—Ä–∏–∑ –Ω–µ –¥–∞–¥—É—Ç.",
  "—Ä–∞—Å–ø–∏–∑–¥—è–π": "–†–∞—Å–ø–∏–∑–¥—è–π ‚Äî –Ω–µ —Ñ–æ–Ω—Ç–∞–Ω, –∞ —Ä–∞–∑–±—Ä—ã–∑–≥–∏–≤–∞–µ—Ç –≤—Å—ë –≤–æ–∫—Ä—É–≥.",
  "–∫–æ–Ω—á–µ–Ω—ã–π": "–ö–æ–Ω—á–µ–Ω—ã–π ‚Äî –Ω–µ —Ñ–∏–ª—å–º, —Ö—ç–ø–ø–∏-—ç–Ω–¥–∞ –Ω–µ –±—É–¥–µ—Ç.",
  "–±–ª–∏–Ω": "–ë–ª–∏–Ω ‚Äî –Ω–µ –æ–ª–∞–¥—É—à–µ–∫, –∫ —á–∞—é –Ω–µ –ø–æ–¥–∞—é—Ç.",
  "—á–µ—Ä—Ç": "–ß–µ—Ä—Ç ‚Äî –Ω–µ –ø–æ–ø—É–≥–∞–π, –ø–æ–≤—Ç–æ—Ä—è—Ç—å –Ω–µ –±—É–¥–µ—Ç.",
  "—á—ë—Ä—Ç": "–ß—ë—Ä—Ç ‚Äî –Ω–µ –ø–æ–ø—É–≥–∞–π, –ø–æ–≤—Ç–æ—Ä—è—Ç—å –Ω–µ –±—É–¥–µ—Ç.",
  "—ë–ª–∫–∏-–ø–∞–ª–∫–∏": "–Å–ª–∫–∏-–ø–∞–ª–∫–∏ ‚Äî –Ω–µ –ª–µ—Å, –≥—É–ª—è—Ç—å —Ç–∞–º –Ω–µ —Å—Ç–æ–∏—Ç.",
  "—Ç–≤–æ—é –∂–µ": "–¢–≤–æ—é –∂–µ ‚Äî –Ω–µ —Ä–∞–∑–¥–µ–ª—è—é—Ç, –∞ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ü–µ–ª–∏–∫–æ–º.",
  "—è–ø–æ–Ω—Å–∫–∏–π –≥–æ—Ä–æ–¥–æ–≤–æ–π": "–Ø–ø–æ–Ω—Å–∫–∏–π –≥–æ—Ä–æ–¥–æ–≤–æ–π ‚Äî –Ω–µ —Å–∞–º—É—Ä–∞–π, –º–µ—á–æ–º –Ω–µ –º–∞—à–µ—Ç."
};

function isAdmin(ctx) {
  return ADMIN_IDS.includes(ctx.from.id);
}

function isPrivate(ctx) {
  return ctx.chat.type === 'private';
}

function safeHandler(handler) {
  return async (ctx) => {
    try {
      await handler(ctx);
    } catch (error) {
      console.error('Error in handler:', error);
    }
  };
}

function restrictedCommand(handler) {
  return safeHandler(async (ctx) => {
    if (!isPrivate(ctx) && !isAdmin(ctx)) {
      return;
    }
    await handler(ctx);
  });
}

async function updateStickerCache() {
  try {
    const stickerSet = await bot.telegram.getStickerSet(STICKER_PACK_NAME);
    stickerSetCache.stickers = stickerSet.stickers;
    stickerSetCache.lastUpdated = Date.now();
    console.log(`–û–±–Ω–æ–≤–ª–µ–Ω –∫—ç—à —Å—Ç–∏–∫–µ—Ä–æ–≤: ${stickerSetCache.stickers.length} —Å—Ç–∏–∫–µ—Ä–æ–≤`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫—ç—à–∞ —Å—Ç–∏–∫–µ—Ä–æ–≤:', error);
  }
}

async function sendRandomSticker(ctx) {
  if (stickerSetCache.stickers.length === 0) {
    await updateStickerCache();
  }

  if (stickerSetCache.stickers.length === 0) {
    await ctx.reply('‚ùå –°—Ç–∏–∫–µ—Ä–ø–∞–∫ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    return;
  }

  const randomSticker = stickerSetCache.stickers[
    Math.floor(Math.random() * stickerSetCache.stickers.length)
  ];

  try {
    await ctx.sendSticker(randomSticker.file_id);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∏–∫–µ—Ä–∞:', error);
    await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä');
  }
}

async function sendUserInfo(ctx, forwardedMsgId) {
  const user = ctx.from;
  const time = new Date().toLocaleString('ru-RU', {
    timeZone: 'Europe/Moscow',
    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit'
  });

  const userInfo = `üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –õ–°
üë§ –ò–º—è: ${user.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} ${user.last_name || ''}
üîñ Username: @${user.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üÜî ID: ${user.id}
‚è∞ –í—Ä–µ–º—è: ${time}`;

  const infoMsg = await ctx.telegram.sendMessage(
    ADMIN_CHAT_ID,
    userInfo,
    {
      reply_parameters: { message_id: forwardedMsgId }
    }
  );

  messageConnections.set(infoMsg.message_id, {
    userId: user.id,
    userName: user.first_name || user.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
  });

  return infoMsg.message_id;
}

async function sendCommentReport(postMessageId, commentMessageId) {
  const postLink = `https://t.me/${CHANNEL_USERNAME}/${postMessageId}`;
  const commentLink = `https://t.me/c/${Math.abs(COMMENTS_CHAT_ID).toString().slice(4)}/${commentMessageId}`;
  
  const reportText = `‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n–ü–æ—Å—Ç: ${postLink}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${commentLink}`;
  
  await bot.telegram.sendMessage(ADMIN_CHAT_ID, reportText);
}

bot.on('channel_post', safeHandler(async (ctx) => {
  const post = ctx.channelPost;
  
  if (!post.text && !post.caption) return;
  
  if (post.media_group_id) {
    if (processedMediaGroups.has(post.media_group_id)) {
      return;
    }
    processedMediaGroups.add(post.media_group_id);
    
    setTimeout(() => {
      processedMediaGroups.delete(post.media_group_id);
    }, 60 * 60 * 1000);
  }
  
  try {
    const commentMessage = await bot.telegram.sendMessage(
      COMMENTS_CHAT_ID,
      COMMENT_TEXT,
      {
        parse_mode: 'HTML',
        reply_parameters: { message_id: post.message_id }
      }
    );
    
    await sendCommentReport(post.message_id, commentMessage.message_id);
  } catch (error) {
    await bot.telegram.sendMessage(
      ADMIN_CHAT_ID,
      `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –ø–æ—Å—Ç—É (ID: ${post.message_id}): ${error.message}`
    );
  }
}));

bot.on('new_chat_members', safeHandler(async (ctx) => {
  const chatId = ctx.chat.id;
  const newMembers = ctx.message.new_chat_members;

  const botMember = newMembers.find(member => member.id === ctx.botInfo.id);
  if (botMember && !ALLOWED_CHATS.some(chat => chat.id === chatId)) {
    try {
      await ctx.reply(
        'üö´ –≠—Ç–æ—Ç —á–∞—Ç –Ω–µ —Ä–∞–∑—Ä–µ—à—ë–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.\n' +
        'üì¢ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: https://t.me/red_star_development',
        { parse_mode: 'HTML' }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }

    try {
      await ctx.leaveChat();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —á–∞—Ç–∞:', error);
    }
    return;
  }

  if (chatId === COMMENTS_CHAT_ID) {
    for (const newMember of newMembers) {
      if (newMember.is_bot) continue;

      const warningMessage = await ctx.reply(
        `üëã –ü—Ä–∏–≤–µ—Ç, ${newMember.first_name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!\n\n` +
        `‚ö†Ô∏è –≠—Ç–æ—Ç —á–∞—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –ø–æ—Å—Ç–∞–º –∫–∞–Ω–∞–ª–∞. ` +
        `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∫–∏–Ω—å—Ç–µ —á–∞—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç, –∏–Ω–∞—á–µ –≤—ã –±—É–¥–µ—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω—ã.\n\n` +
        `–ï—Å–ª–∏ –æ—Å—Ç–∞–Ω–µ—Ç–µ—Å—å, –º—ã –±—É–¥–µ–º –≤—ã–Ω—É–∂–¥–µ–Ω—ã –ø—Ä–∏–Ω—è—Ç—å –º–µ—Ä—ã.`,
        { parse_mode: 'HTML' }
      );
      
      userWarnings.set(newMember.id, {
        chatId: ctx.chat.id,
        warningMessageId: warningMessage.message_id,
        joinTime: Date.now()
      });
      
      setTimeout(async () => {
        try {
          const chatMember = await ctx.telegram.getChatMember(ctx.chat.id, newMember.id);
          
          if (['member', 'administrator', 'creator'].includes(chatMember.status)) {
            await ctx.telegram.banChatMember(ctx.chat.id, newMember.id, undefined, {
              revoke_messages: false
            });
            
            await ctx.reply(
              `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${newMember.first_name || '–±–µ–∑ –∏–º–µ–Ω–∏'} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —á–∞—Ç–∞.`,
              { reply_parameters: { message_id: warningMessage.message_id } }
            );
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        } finally {
          userWarnings.delete(newMember.id);
        }
      }, 5 * 60 * 1000);
    }
  }
}));

bot.on('left_chat_member', safeHandler(async (ctx) => {
  if (ctx.chat.id !== COMMENTS_CHAT_ID) return;
  
  const leftMember = ctx.message.left_chat_member;
  
  if (userWarnings.has(leftMember.id)) {
    const warningInfo = userWarnings.get(leftMember.id);
    
    try {
      await ctx.telegram.editMessageText(
        ctx.chat.id,
        warningInfo.warningMessageId,
        null,
        `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${leftMember.first_name || '–±–µ–∑ –∏–º–µ–Ω–∏'} –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!`,
        { parse_mode: 'HTML' }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
    
    userWarnings.delete(leftMember.id);
  }
}));

bot.command('shiza', restrictedCommand(async (ctx) => {
  await sendRandomSticker(ctx);
}));

bot.command('danger', restrictedCommand(async (ctx) => {
  if (ctx.from.id !== 2032240231) {
    await ctx.reply('‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –°–æ–≤–µ—Ç—á–∏–∫–∞.');
    return;
  }

  const messageText = ctx.message.text.split(' ').slice(1).join(' ');
  if (!messageText) {
    await ctx.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü—Ä–∏–º–µ—Ä: /danger –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
    return;
  }

  const jobId = Date.now();
  let lastMessageId = null;

  const stopButton = Markup.inlineKeyboard([
    Markup.button.callback('–°–¢–û–ü', `stop_spam_${jobId}`)
  ]);

  const sendSpamMessage = async () => {
    try {
      if (lastMessageId) {
        try {
          await bot.telegram.deleteMessage(1465194766, lastMessageId);
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        }
      }

      const sentMessage = await bot.telegram.sendMessage(
        1465194766,
        `${messageText}\n\n`,
        {
          parse_mode: 'HTML',
          ...stopButton
        }
      );

      lastMessageId = sentMessage.message_id;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
  };

  await sendSpamMessage();

  const intervalId = setInterval(sendSpamMessage, 5000);
  spamJobs.set(jobId, {
    intervalId,
    lastMessageId,
    userId: ctx.from.id
  });

  await ctx.reply(`‚úÖ –°–ø–∞–º –∑–∞–ø—É—â–µ–Ω —Å ID: ${jobId}. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –°–¢–û–ü –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.`);
}));

bot.action(/stop_spam_(\d+)/, safeHandler(async (ctx) => {
  const jobId = parseInt(ctx.match[1]);
  const job = spamJobs.get(jobId);

  if (!job) {
    await ctx.answerCbQuery('–°–ø–∞–º —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
    return;
  }

  if (ctx.from.id !== job.userId && !isAdmin(ctx)) {
    await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —ç—Ç–æ–≥–æ —Å–ø–∞–º–∞.');
    return;
  }

  clearInterval(job.intervalId);
  spamJobs.delete(jobId);

  if (job.lastMessageId) {
    try {
      await bot.telegram.deleteMessage(1465194766, job.lastMessageId);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
  }

  await ctx.answerCbQuery('–°–ø–∞–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
  await ctx.editMessageReplyMarkup({ inline_keyboard: [] });
}));

bot.on('message', safeHandler(async (ctx) => {
  const message = ctx.message;
  if (!message) return;
  
  const userId = message.from.id;
  const chatId = message.chat.id;
  const text = message.text || '';

  if (text.startsWith('/')) {
    return;
  }

  if (isPrivate(ctx) && userId === 1319314897 && text.includes('–ñ–µ–ª–µ–∑—è–∫–∞, –±—ã—Å—Ç—Ä–æ –º–Ω–µ –∞–Ω–∫–µ—Ç—É –Ω–∞—Ä–∏—Å–æ–≤–∞–ª –±–ª—è—Ç—å')) {
    const userName = ctx.from.first_name || ctx.from.username || '';
    const currentTime = new Date().toLocaleString('ru-RU', { 
      timeZone: 'Europe/Moscow', 
      hour: '2-digit', 
      minute: '2-digit', 
      second: '2-digit' 
    });
    
    const admText = `<b>üìú –ê–Ω–∫–µ—Ç–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>

üí¨ –ü—Ä–∏–≤–µ—Ç, ${userName}! –ó–∞–ø–æ–ª–Ω–∏ —ç—Ç—É –∞–Ω–∫–µ—Ç—É, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –û—Ç–≤–µ—á–∞–π —á–µ—Å—Ç–Ω–æ ‚Äî –æ—Ü–µ–Ω–∏–≤–∞–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ –æ–ø—ã—Ç, –Ω–æ –∏ –ª–∏—á–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞.

<b>1Ô∏è‚É£ –ù–∏–∫ –≤ —á–∞—Ç–µ</b>

<b>2Ô∏è‚É£ –í–æ–∑—Ä–∞—Å—Ç</b>

<b>3Ô∏è‚É£ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å</b> (—É–∫–∞–∑—ã–≤–∞–π –ú–°–ö, —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: <i>${currentTime}</i>)

<b>4Ô∏è‚É£ –ö–∞–∫ –ø–æ—Å—Ç—É–ø–∏—à—å, –µ—Å–ª–∏ –¥—Ä—É–≥–æ–π –∞–¥–º–∏–Ω –Ω–∞—á–Ω—ë—Ç —Ç–µ–±—è –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –≤ —á–∞—Ç–µ?</b>

<b>5Ô∏è‚É£ –ï—Å–ª–∏ –¥–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–ø–æ—Ä—è—Ç –Ω–∞ –ø—É—Å—Ç–æ–º –º–µ—Å—Ç–µ ‚Äî –∫–∞–∫–∏–µ –±—É–¥—É—Ç —Ç–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è?</b>

<b>6Ô∏è‚É£ –ö–∞–∫ —Ç—ã –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –ø—Ä–∞–≤–∏–ª–∞–º —á–∞—Ç–∞?</b>

<b>7Ô∏è‚É£ –°–ª—É—á–∞–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –Ω–∞—Ä—É—à–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞? –ï—Å–ª–∏ –¥–∞ ‚Äî –æ–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é.</b>

<b>8Ô∏è‚É£ –ö–∞–∫–æ–π, –ø–æ-—Ç–≤–æ–µ–º—É, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω?</b>

<b>9Ô∏è‚É£ –ö–∞–∫ —á–∞—Å—Ç–æ —Ç—ã –∑–∞—Ö–æ–¥–∏—à—å –≤ —á–∞—Ç?</b>

<b>üîü –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å—Ä–µ–¥–Ω–µ–º –ø—Ä–æ–≤–æ–¥–∏—à—å –≤ —á–∞—Ç–µ –∑–∞ –¥–µ–Ω—å?</b>

<b>1Ô∏è‚É£1Ô∏è‚É£ –ü–æ—á–µ–º—É —Ç—ã —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–æ–º?</b>

<b>1Ô∏è‚É£2Ô∏è‚É£ –ß–µ–º —Ç—ã –º–æ–∂–µ—à—å –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω —á–∞—Ç—É?</b>`;
    
    await ctx.reply(admText, { parse_mode: 'HTML', disable_web_page_preview: true });
    return;
  }

  const lowerText = text.toLowerCase();
  for (const [word, rhyme] of Object.entries(badWordsRhymes)) {
    if (lowerText.includes(word)) {
      await ctx.reply(rhyme, { reply_parameters: { message_id: message.message_id } });
      break;
    }
  }

  if (isPrivate(ctx) && !isAdmin(ctx)) {
    try {
      const forwardedMsg = await ctx.forwardMessage(ADMIN_CHAT_ID);
      
      messageConnections.set(forwardedMsg.message_id, {
        userId: userId,
        userName: message.from.first_name || message.from.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
      });
      
      const user = ctx.from;
      const time = new Date().toLocaleString('ru-RU', {
        timeZone: 'Europe/Moscow',
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit'
      });

      const userInfo = `üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –õ–°
üë§ –ò–º—è: ${user.first_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} ${user.last_name || ''}
üîñ Username: @${user.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}
üÜî ID: ${user.id}
‚è∞ –í—Ä–µ–º—è: ${time}`;

      await ctx.telegram.sendMessage(
        ADMIN_CHAT_ID,
        userInfo,
        {
          reply_parameters: { message_id: forwardedMsg.message_id }
        }
      );
      
      await ctx.reply('‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º. –û—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
      
      await ctx.telegram.sendMessage(
        ADMIN_CHAT_ID,
        `‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${message.from.username || message.from.first_name} –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ —á–∞—Ç –∞–¥–º–∏–Ω–æ–≤`
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.');
      
      await ctx.telegram.sendMessage(
        ADMIN_CHAT_ID,
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @${message.from.username || message.from.first_name}: ${error.message}`
      );
    }
    return;
  }
  
  if (chatId === ADMIN_CHAT_ID && isAdmin(ctx) && message.reply_to_message) {
    try {
      const repliedMsg = message.reply_to_message;
      const userData = messageConnections.get(repliedMsg.message_id);
      
      if (userData) {
        await ctx.copyMessage(userData.userId);
        
        await ctx.reply('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.', {
          reply_parameters: { message_id: message.message_id }
        });
        
        await ctx.telegram.sendMessage(
          userData.userId,
          '‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!'
        );
      } else {
        await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.', {
          reply_parameters: { message_id: message.message_id }
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', error);
      await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.', {
        reply_parameters: { message_id: message.message_id }
      });
    }
  }
}));

bot.start(restrictedCommand(async (ctx) => {
  const user = ctx.message.from;
  const firstName = user.first_name || '';
  const userID = user.id;

  if (isAdmin(ctx)) {
    let greeting = '';
    if (userID === 1465194766) greeting = `üëë –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –°–ø–µ–∫—Ç—Ä ‚ô¶Ô∏è!`;
    else if (userID === 2032240231) greeting = `‚öúÔ∏è –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –°–æ–≤–µ—Ç—á–∏–∫ üìú!`;
    else if (userID === 1319314897) greeting = `üèõÔ∏è –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –£—Å—Ç—Ä–∏—á–Ω—ã–π –ö–æ–º–∏—Å—Å–∞—Ä üèõÔ∏è!`;
    greeting += `\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.`;
    await ctx.reply(greeting);
  } else {
    const greeting = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${firstName ? firstName : '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!
–í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –≤ –±–æ—Ç –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∫–∞–Ω–∞–ª–∞ –Ø –°–ø–µ–∫—Ç—Ä ‚ô¶Ô∏è.

üí¨ –ó–¥–µ—Å—å –º–æ–∂–Ω–æ:
‚Äî –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –±–∞–Ω –∏–ª–∏ –¥—Ä—É–≥–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ,
‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é,
‚Äî –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.

üïì –û–±—ã—á–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ 1‚Äì2 –¥–Ω–µ–π.`;

    await ctx.reply(greeting, {
      parse_mode: 'HTML',
      disable_web_page_preview: false
    });
  }
}));

bot.help(restrictedCommand(async (ctx) => {
  if (isAdmin(ctx)) {
    const adminHelpText = `<b>üõ† –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–æ–≤:</b>

/start ‚Äî –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/info ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
/test ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
/allowed_chats ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤
/comment_text ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–¥ –ø–æ—Å—Ç–∞–º–∏
/adm ‚Äî –∞–Ω–∫–µ—Ç–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –°–æ–≤–µ—Ç –≠–ª–∏—Ç
/appeal ‚Äî –∞–Ω–∫–µ—Ç–∞ –¥–ª—è –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è
/danger ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –°–æ–≤–µ—Ç—á–∏–∫–∞)
/shiza ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏–∫–µ—Ä –∏–∑ –ø–∞–∫–∞ –®–∏–∑—ã

<b>–ö–∞–∫ –æ—Ç–≤–µ—á–∞—Ç—å</b>:
üí° –í –õ–°: –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -> –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ–≥–æ ‚Äî –±–æ—Ç –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
üí° –í —á–∞—Ç–∞—Ö: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ <code>https://t.me/c/&lt;chat_short_id&gt;/&lt;message_id&gt;</code>. –ë–æ—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç –ø—Ä–∏–Ω—è—Ç–∏–µ —Å—Å—ã–ª–∫–∏. –°–ª–µ–¥—É—é—â–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –≤–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ/—Å—Ç–∏–∫–µ—Ä/—Ñ–∞–π–ª/–≤–∏–¥–µo/–æ–ø—Ä–æ—Å) –±—É–¥–µ—Ç –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –∫–∞–∫ –æ—Ç–≤–µ—Ç –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ—Å—Ç.`;
    await ctx.reply(adminHelpText, { parse_mode: 'HTML', disable_web_page_preview: true });
  } else {
    const userHelpText = `‚ÑπÔ∏è –ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

/start ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/info ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
/adm ‚Äî –∞–Ω–∫–µ—Ç–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –°–æ–≤–µ—Ç –≠–ª–∏—Ç
/appeal ‚Äî –∞–Ω–∫–µ—Ç–∞ –¥–ª—è –æ–±–∂–∞–ª–æ–≤–∞–Ω–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è
/shiza ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏–∫–µ—Ä –∏–∑ –ø–∞–∫–∞ –®–∏–∑—ã`;
    await ctx.reply(userHelpText, { parse_mode: 'HTML', disable_web_page_preview: true });
  }
}));

bot.command('info', restrictedCommand(async (ctx) => {
  const infoText = `‚öôÔ∏è –û –±–æ—Ç–µ
–í–µ—Ä—Å–∏—è: 0.0.1
–ò–ò: Red-AI 0.1
–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏: <a href="https://t.me/red_star_development">–ö—Ä–∞—Å–Ω–∞—è –∑–≤–µ–∑–¥–∞</a>`;
  await ctx.reply(infoText, { parse_mode: 'HTML', disable_web_page_preview: true });
}));

bot.command('test', restrictedCommand(async (ctx) => {
  if (!isAdmin(ctx)) return;
  await ctx.reply('‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
}));

bot.command('allowed_chats', restrictedCommand(async (ctx) => {
  if (!isAdmin(ctx)) return;
  
  let response = `<b>üìã –†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —á–∞—Ç—ã:</b>\n\n`;
  ALLOWED_CHATS.forEach(chat => {
    response += `‚Ä¢ ${chat.name} (ID: ${chat.id})\n`;
  });
  
  await ctx.reply(response, { parse_mode: 'HTML' });
}));

bot.command('comment_text', restrictedCommand(async (ctx) => {
  if (!isAdmin(ctx)) return;
  
  await ctx.reply(COMMENT_TEXT, { parse_mode: 'HTML', disable_web_page_preview: true });
}));

bot.command('adm', restrictedCommand(async (ctx) => {
  const userName = ctx.from.first_name || ctx.from.username || '';
  const currentTime = new Date().toLocaleString('ru-RU', { 
    timeZone: 'Europe/Moscow', 
    hour: '2-digit', 
    minute: '2-digit', 
    second: '2-digit' 
  });
  
  const admText = `<b>üìú –ê–Ω–∫–µ—Ç–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>

üí¨ –ü—Ä–∏–≤–µ—Ç, ${userName}! –ó–∞–ø–æ–ª–Ω–∏ —ç—Ç—É –∞–Ω–∫–µ—Ç—É, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –û—Ç–≤–µ—á–∞–π —á–µ—Å—Ç–Ω–æ ‚Äî –æ—Ü–µ–Ω–∏–≤–∞–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ –æ–ø—ã—Ç, –Ω–æ –∏ –ª–∏—á–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞.

<b>1Ô∏è‚É£ –ù–∏–∫ –≤ —á–∞—Ç–µ</b>

<b>2Ô∏è‚É£ –í–æ–∑—Ä–∞—Å—Ç</b>

<b>3Ô∏è‚É£ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å</b> (—É–∫–∞–∑—ã–≤–∞–π –ú–°–ö, —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: <i>${currentTime}</i>)

<b>4Ô∏è‚É£ –ö–∞–∫ –ø–æ—Å—Ç—É–ø–∏—à—å, –µ—Å–ª–∏ –¥—Ä—É–≥–æ–π –∞–¥–º–∏–Ω –Ω–∞—á–Ω—ë—Ç —Ç–µ–±—è –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –≤ —á–∞—Ç–µ?</b>

<b>5Ô∏è‚É£ –ï—Å–ª–∏ –¥–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–ø–æ—Ä—è—Ç –Ω–∞ –ø—É—Å—Ç–æ–º –º–µ—Å—Ç–µ ‚Äî –∫–∞–∫–∏–µ –±—É–¥—É—Ç —Ç–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è?</b>

<b>6Ô∏è‚É£ –ö–∞–∫ —Ç—ã –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –ø—Ä–∞–≤–∏–ª–∞–º —á–∞—Ç–∞?</b>

<b>7Ô∏è‚É£ –°–ª—É—á–∞–ª–æ—Å—å –ª–∏ —Ç–µ–±–µ –Ω–∞—Ä—É—à–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞? –ï—Å–ª–∏ –¥–∞ ‚Äî –æ–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é.</b>

<b>8Ô∏è‚É£ –ö–∞–∫–æ–π, –ø–æ-—Ç–≤–æ–µ–º—É, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω?</b>

<b>9Ô∏è‚É£ –ö–∞–∫ —á–∞—Å—Ç–æ —Ç—ã –∑–∞—Ö–æ–¥–∏—à—å –≤ —á–∞—Ç?</b>

<b>üîü –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å—Ä–µ–¥–Ω–µ–º –ø—Ä–æ–≤–æ–¥–∏—à—å –≤ —á–∞—Ç–µ –∑–∞ –¥–µ–Ω—å?</b>

<b>1Ô∏è‚É£1Ô∏è‚É£ –ü–æ—á–µ–º—É —Ç—ã —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–æ–º?</b>

<b>1Ô∏è‚É£2Ô∏è‚É£ –ß–µ–º —Ç—ã –º–æ–∂–µ—à—å –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω —á–∞—Ç—É?</b>`;
  
  await ctx.reply(admText, { parse_mode: 'HTML', disable_web_page_preview: true });
}));

bot.command('appeal', restrictedCommand(async (ctx) => {
  const appealText = `<b>üìÑ –ê–ù–ö–ï–¢–ê –î–õ–Ø –û–ë–ñ–ê–õ–û–í–ê–ù–ò–Ø –ù–ê–ö–ê–ó–ê–ù–ò–Ø</b>

<b>1. –¢–≤–æ–π –Ω–∏–∫ –≤ Telegram:</b>
<em>(—É–∫–∞–∂–∏ –∏–º—è, –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º —Ç–µ–±—è –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏)</em>

<b>2. –ö–∞–∫–æ–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ —Ç—ã –ø–æ–ª—É—á–∏–ª?</b>
<em>(–ë–∞–Ω / –ú—É—Ç / –î—Ä—É–≥–æ–µ)</em>

<b>3. –î–∞—Ç–∞ –∏ –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è:</b>
<em>(–µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å —Ç–æ—á–Ω–æ ‚Äî —É–∫–∞–∂–∏ —Ö–æ—Ç—è –±—ã –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ)</em>

<b>4. –ü—Ä–∏—á–∏–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Ç–µ–±—è –Ω–∞–∫–∞–∑–∞–ª–∏:</b>
<em>(–∫–∞–∫ —Ç—ã —ç—Ç–æ –ø–æ–Ω—è–ª ‚Äî —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª, –∫—É–¥–∞ —Å–∫–∏–Ω—É–ª, –∫–æ–º—É –æ—Ç–≤–µ—Ç–∏–ª)</em>

<b>5. –ü–æ—á–µ–º—É —Ç—ã —Å—á–∏—Ç–∞–µ—à—å, —á—Ç–æ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∏–ª–∏ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å?</b>
<em>(–æ–±—ä—è—Å–Ω–∏ —Å–≤–æ–µ–π —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è ‚Äî –∫–æ—Ä–æ—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É)</em>

<b>6. –û–±–µ—â–∞–µ—à—å –ª–∏ —Ç—ã –Ω–µ –Ω–∞—Ä—É—à–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –≤ –±—É–¥—É—â–µ–º?</b>
<em>(—á–µ—Å—Ç–Ω–æ)</em>

üî¥ <b>–í–∞–∂–Ω–æ:</b>
‚Äî –°–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –∞–Ω–∫–µ—Ç—ã <b>–Ω–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è.</b>
‚Äî –ñ–∞–ª–æ–±—ã —Å –º–∞—Ç–∞–º–∏ –∏ —É–≥—Ä–æ–∑–∞–º–∏ ‚Äî <b>–∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è.</b>
‚Äî –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–¥–∞—á–∞ –≤–æ–∑–º–æ–∂–Ω–∞ <b>—á–µ—Ä–µ–∑ 3 –¥–Ω—è.</b>

‚öñÔ∏è –û—Ç–≤–µ—Ç –ø—Ä–∏–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 48 —á–∞—Å–æ–≤.`;
  
  await ctx.reply(appealText, { parse_mode: 'HTML', disable_web_page_preview: true });
}));

setInterval(updateStickerCache, 60 * 60 * 1000);

module.exports = async (req, res) => {
  try {
    await bot.handleUpdate(req.body, res);
  } catch (error) {
    console.error('Error handling update:', error);
    res.status(400).send('Error');
  }
};

if (process.env.NODE_ENV === 'development') {
  bot.launch();
  console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
  updateStickerCache();
}
